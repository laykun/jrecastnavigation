/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.laykun.recast;

public class dtNodePool {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected dtNodePool(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(dtNodePool obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RecastJNI.delete_dtNodePool(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public dtNodePool(int maxNodes, int hashSize) {
    this(RecastJNI.new_dtNodePool(maxNodes, hashSize), true);
  }

  public void clear() {
    RecastJNI.dtNodePool_clear(swigCPtr, this);
  }

  public dtNode getNode(long id, short state) {
    long cPtr = RecastJNI.dtNodePool_getNode__SWIG_0(swigCPtr, this, id, state);
    return (cPtr == 0) ? null : new dtNode(cPtr, false);
  }

  public dtNode getNode(long id) {
    long cPtr = RecastJNI.dtNodePool_getNode__SWIG_1(swigCPtr, this, id);
    return (cPtr == 0) ? null : new dtNode(cPtr, false);
  }

  public dtNode findNode(long id, short state) {
    long cPtr = RecastJNI.dtNodePool_findNode(swigCPtr, this, id, state);
    return (cPtr == 0) ? null : new dtNode(cPtr, false);
  }

  public long findNodes(long id, SWIGTYPE_p_p_dtNode nodes, int maxNodes) {
    return RecastJNI.dtNodePool_findNodes(swigCPtr, this, id, SWIGTYPE_p_p_dtNode.getCPtr(nodes), maxNodes);
  }

  public long getNodeIdx(dtNode node) {
    return RecastJNI.dtNodePool_getNodeIdx(swigCPtr, this, dtNode.getCPtr(node), node);
  }

  public dtNode getNodeAtIdx(long idx) {
    long cPtr = RecastJNI.dtNodePool_getNodeAtIdx__SWIG_0(swigCPtr, this, idx);
    return (cPtr == 0) ? null : new dtNode(cPtr, false);
  }

  public int getMemUsed() {
    return RecastJNI.dtNodePool_getMemUsed(swigCPtr, this);
  }

  public int getMaxNodes() {
    return RecastJNI.dtNodePool_getMaxNodes(swigCPtr, this);
  }

  public int getHashSize() {
    return RecastJNI.dtNodePool_getHashSize(swigCPtr, this);
  }

  public int getFirst(int bucket) {
    return RecastJNI.dtNodePool_getFirst(swigCPtr, this, bucket);
  }

  public int getNext(int i) {
    return RecastJNI.dtNodePool_getNext(swigCPtr, this, i);
  }

  public int getNodeCount() {
    return RecastJNI.dtNodePool_getNodeCount(swigCPtr, this);
  }

}
